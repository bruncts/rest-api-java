package com.restspringboot.math;

import org.springframework.web.bind.annotation.PathVariable;

import com.restspringboot.converters.NumberConverter;
import com.restspringboot.exceptions.UnsupportedMathException;

public class SimpleMath {
	
	public Double sum( Double firstNumber, Double secondNumber) {
		
		return firstNumber + secondNumber;
	}

	public Double sub( String firstNumber, String secondNumber) {
		if (!NumberConverter.isNumeric(firstNumber) || !NumberConverter.isNumeric(secondNumber)) {
			throw new UnsupportedMathException("Only numeric values accepted");
		}
		return NumberConverter.convertDouble(firstNumber) - NumberConverter.convertDouble(secondNumber);
	}

	
	public Double div( String firstNumber, String secondNumber) {
		if (!NumberConverter.isNumeric(firstNumber) || !NumberConverter.isNumeric(secondNumber)) {
			throw new UnsupportedMathException("Only numeric values accepted");
		}
		return NumberConverter.convertDouble(firstNumber) / NumberConverter.convertDouble(secondNumber);
	}
	
	
	public Double mult( String firstNumber, String secondNumber) {
		if (!NumberConverter.isNumeric(firstNumber) || !NumberConverter.isNumeric(secondNumber)) {
			throw new UnsupportedMathException("Only numeric values accepted");
		}
		return NumberConverter.convertDouble(firstNumber) * NumberConverter.convertDouble(secondNumber);
	}
	
	
	public Double mean( String firstNumber, String secondNumber) {
		if (!NumberConverter.isNumeric(firstNumber) || !NumberConverter.isNumeric(secondNumber)) {
			throw new UnsupportedMathException("Only numeric values accepted");
		}
		return (NumberConverter.convertDouble(firstNumber) + NumberConverter.convertDouble(secondNumber))/2;
	}
	
	
	public Double mean( String firstNumber) {
		if (!NumberConverter.isNumeric(firstNumber)) {
			throw new UnsupportedMathException("Only numeric value accepted");
		}
		return Math.sqrt(NumberConverter.convertDouble(firstNumber));
	}
}
